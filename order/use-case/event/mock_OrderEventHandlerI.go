// Code generated by mockery v2.20.0. DO NOT EDIT.

package event

import (
	entities "github.com/facuellarg/order/domain/entities"
	mock "github.com/stretchr/testify/mock"
)

// MockOrderEventHandlerI is an autogenerated mock type for the OrderEventHandlerI type
type MockOrderEventHandlerI struct {
	mock.Mock
}

type MockOrderEventHandlerI_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOrderEventHandlerI) EXPECT() *MockOrderEventHandlerI_Expecter {
	return &MockOrderEventHandlerI_Expecter{mock: &_m.Mock}
}

// SendOrderCreatedEvent provides a mock function with given fields: _a0
func (_m *MockOrderEventHandlerI) SendOrderCreatedEvent(_a0 entities.CreateOrderEvent) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.CreateOrderEvent) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockOrderEventHandlerI_SendOrderCreatedEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendOrderCreatedEvent'
type MockOrderEventHandlerI_SendOrderCreatedEvent_Call struct {
	*mock.Call
}

// SendOrderCreatedEvent is a helper method to define mock.On call
//   - _a0 entities.CreateOrderEvent
func (_e *MockOrderEventHandlerI_Expecter) SendOrderCreatedEvent(_a0 interface{}) *MockOrderEventHandlerI_SendOrderCreatedEvent_Call {
	return &MockOrderEventHandlerI_SendOrderCreatedEvent_Call{Call: _e.mock.On("SendOrderCreatedEvent", _a0)}
}

func (_c *MockOrderEventHandlerI_SendOrderCreatedEvent_Call) Run(run func(_a0 entities.CreateOrderEvent)) *MockOrderEventHandlerI_SendOrderCreatedEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(entities.CreateOrderEvent))
	})
	return _c
}

func (_c *MockOrderEventHandlerI_SendOrderCreatedEvent_Call) Return(_a0 error) *MockOrderEventHandlerI_SendOrderCreatedEvent_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockOrderEventHandlerI_SendOrderCreatedEvent_Call) RunAndReturn(run func(entities.CreateOrderEvent) error) *MockOrderEventHandlerI_SendOrderCreatedEvent_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockOrderEventHandlerI interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockOrderEventHandlerI creates a new instance of MockOrderEventHandlerI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockOrderEventHandlerI(t mockConstructorTestingTNewMockOrderEventHandlerI) *MockOrderEventHandlerI {
	mock := &MockOrderEventHandlerI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
