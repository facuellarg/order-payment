// Code generated by mockery v2.20.0. DO NOT EDIT.

package service

import (
	entities "github.com/facuellarg/order/domain/entities"
	mock "github.com/stretchr/testify/mock"
)

// MockPaymentServiceI is an autogenerated mock type for the PaymentServiceI type
type MockPaymentServiceI struct {
	mock.Mock
}

type MockPaymentServiceI_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPaymentServiceI) EXPECT() *MockPaymentServiceI_Expecter {
	return &MockPaymentServiceI_Expecter{mock: &_m.Mock}
}

// OrderCreateEvent provides a mock function with given fields: _a0
func (_m *MockPaymentServiceI) OrderCreateEvent(_a0 entities.CreateOrderEvent) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(entities.CreateOrderEvent) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockPaymentServiceI_OrderCreateEvent_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OrderCreateEvent'
type MockPaymentServiceI_OrderCreateEvent_Call struct {
	*mock.Call
}

// OrderCreateEvent is a helper method to define mock.On call
//   - _a0 entities.CreateOrderEvent
func (_e *MockPaymentServiceI_Expecter) OrderCreateEvent(_a0 interface{}) *MockPaymentServiceI_OrderCreateEvent_Call {
	return &MockPaymentServiceI_OrderCreateEvent_Call{Call: _e.mock.On("OrderCreateEvent", _a0)}
}

func (_c *MockPaymentServiceI_OrderCreateEvent_Call) Run(run func(_a0 entities.CreateOrderEvent)) *MockPaymentServiceI_OrderCreateEvent_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(entities.CreateOrderEvent))
	})
	return _c
}

func (_c *MockPaymentServiceI_OrderCreateEvent_Call) Return(_a0 error) *MockPaymentServiceI_OrderCreateEvent_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPaymentServiceI_OrderCreateEvent_Call) RunAndReturn(run func(entities.CreateOrderEvent) error) *MockPaymentServiceI_OrderCreateEvent_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockPaymentServiceI interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPaymentServiceI creates a new instance of MockPaymentServiceI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPaymentServiceI(t mockConstructorTestingTNewMockPaymentServiceI) *MockPaymentServiceI {
	mock := &MockPaymentServiceI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
